# Generated by Django 3.2.24 on 2025-09-30 08:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('model_type', models.CharField(choices=[('random_forest', 'Random Forest'), ('svm', 'Support Vector Machine'), ('ensemble', 'Ensemble')], max_length=20)),
                ('version', models.CharField(default='1.0', max_length=20)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('precision', models.FloatField(blank=True, null=True)),
                ('recall', models.FloatField(blank=True, null=True)),
                ('f1_score', models.FloatField(blank=True, null=True)),
                ('feature_importance', models.JSONField(blank=True, null=True)),
                ('model_file', models.FileField(blank=True, null=True, upload_to='ml_models/')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('trained_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pregnancies', models.IntegerField()),
                ('glucose', models.IntegerField()),
                ('blood_pressure', models.IntegerField()),
                ('skin_thickness', models.IntegerField()),
                ('insulin', models.IntegerField()),
                ('bmi', models.FloatField()),
                ('diabetes_pedigree_function', models.FloatField()),
                ('age', models.IntegerField()),
                ('bmi_age_interaction', models.FloatField(blank=True, null=True)),
                ('glucose_bmi_ratio', models.FloatField(blank=True, null=True)),
                ('prediction_result', models.BooleanField()),
                ('confidence', models.FloatField(blank=True, null=True)),
                ('feature_analysis', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('ml_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='Diabetic_Prediction.mlmodel')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ModelPerformance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('accuracy', models.FloatField()),
                ('precision', models.FloatField()),
                ('recall', models.FloatField()),
                ('f1_score', models.FloatField()),
                ('test_size', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ml_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performances', to='Diabetic_Prediction.mlmodel')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FeatureStatistics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_name', models.CharField(max_length=100)),
                ('mean_value', models.FloatField()),
                ('std_value', models.FloatField()),
                ('min_value', models.FloatField()),
                ('max_value', models.FloatField()),
                ('importance_score', models.FloatField()),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ml_model', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feature_stats', to='Diabetic_Prediction.mlmodel')),
            ],
            options={
                'unique_together': {('ml_model', 'feature_name')},
            },
        ),
    ]
